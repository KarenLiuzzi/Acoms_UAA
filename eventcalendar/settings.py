"""
Django settings for eventcalendar project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
from datetime import timedelta
#import schedule
from celery import schedules

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "i8e1s3!_(fjsiv%1pn3sb3o=s)!p*nzwh1$gp5-l&%nb!d=y_s"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    "calendarapp.apps.CalendarappConfig",
    "accounts.apps.AccountsConfig",
    "notify.apps.NotifyConfig",
    'channels',
    "django_celery_results",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "eventcalendar.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "eventcalendar.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'AcOMs',
        'USER': 'postgres',
        'PASSWORD': 'test',
        'HOST': 'db',
        #'HOST': 'localhost', Si la base de datos está en el mismo servidor
        'PORT': '5432',      # El puerto predeterminado de PostgreSQL
    }
}

JAZZMIN_SETTINGS = {
    'css_includes': [
        'css/mis_estilos.css',
    ],
    
      # Welcome text on the login screen
    "welcome_sign": "Bienvenido al panel de Administración AcOms",
    "custom_css": "css/main.css",
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Administración AcOms",

    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Administración AcOms",

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "Administración AcOms",

    # Logo to use for your site, must be present in static files, used for brand on top left
    "site_logo":  "images/favicon.ico",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "images/inicio.ico",

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": None,

    # CSS classes that are applied to the logo above
    "site_logo_classes": None,
    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon":  "images/favicon.ico",
    "copyright": None,
    "user_avatar": None,    
    "default_icon_parents": None,
    "default_icon_children": None,
    
    "icons": {
        "auth.permission": "fas fa-users-cog",
        "accounts.user": "fas fa-user",
        "accounts.funcionariodocente": "",
        "auth.Group": "fas fa-users",
        
        "calendarapp.dia": "",
        "calendarapp.estadoactividadacademica": "",
        "calendarapp.estadotarea": "",
        "calendarapp.convocatoria": "",
        "calendarapp.motivo": "",
        "calendarapp.parametro": "",
        "calendarapp.tipotarea": "",
        "calendarapp.tipotutoria": "",
        "calendarapp.tipoorientacionacademica": "",
        "calendarapp.unidadmedida": "", 
        "calendarapp.semestre": "",
    },
    
    # Custom links to append to app groups, keyed on app name
    "custom_links": {
        "user": [{
            "icon": "fas fa-user",
        }]
    },
    
     # Whether to aut expand the menu
    "navigation_expanded": False,
    
     # Links to put along the top menu
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Ir al Portal web",  "url": "http://127.0.0.1:8000/"},
    ],
    
}

#JAZZMIN_SETTINGS["show_ui_builder"] = True


JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": True,
    "footer_small_text": True,
    "body_small_text": False,
    "brand_small_text": True,
    "brand_colour": "navbar-lightblue",
    "accent": "accent-navy",
    "navbar": "navbar-lightblue navbar-dark",
    "no_navbar_border": True,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-info",
    "sidebar_nav_small_text": True,
    "sidebar_disable_expand": True,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_legacy_style": True,
    "sidebar_nav_flat_style": True,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn btn-primary",
        "secondary": "btn btn-secondary",
        "info": "btn btn-primary",
        "warning": "btn btn-warning",
        "danger": "btn btn-danger",
        "success": "btn btn-primary"
    },
    "actions_sticky_top": True
    
}

##3c8dbc

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation."
        "UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation." "MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation." "CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation." "NumericPasswordValidator"},
]

AUTH_USER_MODEL = "accounts.User"

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

#LANGUAGE_CODE = "en-us"
LANGUAGE_CODE = "es"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]


# EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
# EMAIL_FILE_PATH = [os.path.join(BASE_DIR, "sent_emails")]

# SENDGRID_API_KEY = os.getenv('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')

# EMAIL_HOST = 'smtp.sendgrid.net'
# EMAIL_HOST_USER = 'apikey' # this is exactly the value 'apikey'
# EMAIL_HOST_PASSWORD = SENDGRID_API_KEY
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True

#agregado el tiempo limite del token para reset passwords
PASSWORD_RESET_TIMEOUT = 86400



#agregados
# LOGIN_REDIRECT_URL= '/calendarapp/dashboard'

# LOGOUT_REDDIRECT_URL= '/login/'

LOGIN_URL= '/login/'


WSGI_APPLICATION = "eventcalendar.wsgi.application"

CHANNEL_LAYERS = {
    'default':{
        'BACKEND':'channels.layers.InMemoryChannelLayer'
    }
}


#Configuración de Celery
# CELERY_BROKER_URL = 'redis://localhost:6379/0'
# CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_BROKER_URL = os.environ.get("CELERY_BROKER", "redis://redis:6379/0")
CELERY_RESULT_BACKEND = os.environ.get("CELERY_BROKER", "redis://redis:6379/0")
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE= 'UTC'
# CELERY_TIMEZONE = 'UTC'
CELERY_BEAT_SCHEDULE = {
    'mi-tarea-programada': {
        'task': '/task.py',  # especifica la ruta de la tarea que deseas programar
        'schedule': schedules.crontab(hour=0, minute=0),  # se ejecuta diariamente a medianoche
    },
}