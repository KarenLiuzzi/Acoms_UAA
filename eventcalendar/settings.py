"""
Django settings for eventcalendar project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import os
from pathlib import Path
from celery.schedules import crontab


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get("DEBUG", default=0))

ALLOWED_HOSTS=os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

CSRF_TRUSTED_ORIGINS = ["http://localhost:8000", "http://0.0.0.0:8000", "http://127.0.0.1:8000"]


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    "calendarapp.apps.CalendarappConfig",
    "accounts.apps.AccountsConfig",
    "notify.apps.NotifyConfig",
    "channels",
    #'django_celery_beat',
    #"django_celery_results",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "eventcalendar.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "eventcalendar.wsgi.application"


DATABASES = {
    'default': {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("SQL_DATABASE", BASE_DIR / "db.sqlite3"),
        "USER": os.environ.get("SQL_USER", "user"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}

JAZZMIN_SETTINGS = {
    'css_includes': [
        'css/mis_estilos.css',
    ],

      # Welcome text on the login screen
    "welcome_sign": "Bienvenido al panel de Administración AcOms",
    "custom_css": "css/main.css",
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Administración AcOms",

    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Administración AcOms",

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "Administración AcOms",

    # Logo to use for your site, must be present in static files, used for brand on top left
    "site_logo":  "images/favicon.ico",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "images/inicio.ico",

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": None,

    # CSS classes that are applied to the logo above
    "site_logo_classes": None,
    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon":  "images/favicon.ico",
    "copyright": None,
    "user_avatar": None,
    "default_icon_parents": None,
    "default_icon_children": None,

    "icons": {
        "auth.permission": "fas fa-users-cog",
        "accounts.user": "fas fa-user",
        "accounts.funcionariodocente": "",
        "auth.Group": "fas fa-users",

        "calendarapp.dia": "",
        "calendarapp.estadoactividadacademica": "",
        "calendarapp.estadotarea": "",
        "calendarapp.convocatoria": "",
        "calendarapp.motivo": "",
        "calendarapp.parametro": "",
        "calendarapp.tipotarea": "",
        "calendarapp.tipotutoria": "",
        "calendarapp.tipoorientacionacademica": "",
        "calendarapp.unidadmedida": "",
        "calendarapp.semestre": "",
    },

    # Custom links to append to app groups, keyed on app name
    "custom_links": {
        "user": [{
            "icon": "fas fa-user",
        }]
    },

     # Whether to aut expand the menu
    "navigation_expanded": False,

     # Links to put along the top menu
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Ir al Portal web",  "url": "http://0.0.0.0:8000/"},
    ],

}

#JAZZMIN_SETTINGS["show_ui_builder"] = True


JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": True,
    "footer_small_text": True,
    "body_small_text": False,
    "brand_small_text": True,
    "brand_colour": "navbar-lightblue",
    "accent": "accent-navy",
    "navbar": "navbar-lightblue navbar-dark",
    "no_navbar_border": True,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-info",
    "sidebar_nav_small_text": True,
    "sidebar_disable_expand": True,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": True,
    "sidebar_nav_legacy_style": True,
    "sidebar_nav_flat_style": True,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn btn-primary",
        "secondary": "btn btn-secondary",
        "info": "btn btn-primary",
        "warning": "btn btn-warning",
        "danger": "btn btn-danger",
        "success": "btn btn-primary"
    },
    "actions_sticky_top": True

}

##3c8dbc

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation."
        "UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation." "MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation." "CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation." "NumericPasswordValidator"},
]

AUTH_USER_MODEL = "accounts.User"

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

#LANGUAGE_CODE = "en-us"
LANGUAGE_CODE = "es"

#TIME_ZONE = "UTC"
TIME_ZONE = "America/Asuncion"

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"

STATIC_ROOT = BASE_DIR / "staticfiles"

STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]


#agregado el tiempo limite del token para reset passwords
PASSWORD_RESET_TIMEOUT = 86400

#agregados
# LOGIN_REDIRECT_URL= '/calendarapp/dashboard'

# LOGOUT_REDDIRECT_URL= '/login/'

LOGIN_URL= '/login/'

CHANNEL_LAYERS = {
    'default':{
        'BACKEND':'channels.layers.InMemoryChannelLayer'
    }
}


CELERY_BROKER_URL = os.environ.get("CELERY_BROKER", "redis://redis:6379/0")
CELERY_RESULT_BACKEND = os.environ.get("CELERY_BACKEND", "db+postgresql://postgres:test@db:5432/AcOMs")
CELERY_TIMEZONE = 'America/Asuncion'
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
CELERY_BEAT_SCHEDULE = {
    "volcar_datos_academicos": {
        "task": "calendarapp.tasks.importar_datos",
        #"schedule": crontab(minute=0, hour=0, day_of_week='1-5'),
        "schedule": crontab(minute="*/20"),
        "options": {
            "queue": "datos_academicos",
            "time_limit": 3600,  # Tiempo límite en segundos (en este caso, 1 hora)
             "retry": {
                "max_retries": 2,  # Número máximo de reintentos
                "interval_start": 20,  #tiempo espera para realizar reintentos en segundos
            },
        },
    },
    "testing_task": {
        "task": "calendarapp.tasks.testing_hola",
        "options": {
            "queue": "datos_academicos",
        },
        "schedule": crontab(minute="*/10"),
    },
}