version: '3.8'

services:
  redis:
    image: "redis:alpine"
    ports:
      - '6379:6379'
    env_file:
      - ./.env
    environment:
      - TZ= ${TZ}

  django:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "python manage.py flush --no-input && python manage.py makemigrations && python manage.py migrate && python manage.py dbshell < data.sql && python manage.py collectstatic --noinput && gunicorn eventcalendar.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
      
  nginx:
    build: ./nginx
    environment:
      TZ: "America/Asuncion"
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - 8000:80
    depends_on:
      - django

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      TZ: ${TZ}
    env_file:
      - ./.env
    ports:
      - "5050:80"
    depends_on:
      - db

  celery:
    build: .
    container_name: celery
    command: celery -A eventcalendar worker -Q datos_academicos -n datos_academicos@worker --concurrency=2 --loglevel=INFO -E 
    volumes:
      - .:/usr/src/app
    env_file:
      - ./.env
    depends_on:
      - django
      - redis

  celery-beat:
    build: .
    container_name: celery-beat
    command: celery -A eventcalendar beat --loglevel=INFO
    volumes:
      - .:/usr/src/app
    env_file:
      - ./.env
    depends_on:
      - django
      - redis
      - celery

  flower:
    image: mher/flower
    container_name: flower
    command: celery flower --persistent=True 
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_BACKEND=${CELERY_BACKEND}
      - FLOWER_PORT=${FLOWER_PORT}
      - SECRET_KEY=${SECRET_KEY}
    ports:
      - "5000:5000"
    volumes:
      - flower_data:/data
    env_file:
      - ./.env
    depends_on:
      - celery
      - redis

volumes:
  postgres_data:
  static_volume:
  flower_data:
